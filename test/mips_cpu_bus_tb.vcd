$date
	Tue Dec  1 23:55:06 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mips_cpu_bus_tb $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 32 # register_v0 [31:0] $end
$var wire 32 $ readdata [31:0] $end
$var wire 1 % read $end
$var wire 4 & byteenable [3:0] $end
$var wire 32 ' address [31:0] $end
$var wire 1 ( active $end
$var reg 1 ) clk $end
$var reg 32 * delayed_readdata [31:0] $end
$var reg 1 + reset $end
$var reg 1 , waitrequest $end
$scope module cpuInst $end
$var wire 1 ) clk $end
$var wire 32 - readdata [31:0] $end
$var wire 1 + reset $end
$var wire 1 , waitrequest $end
$var wire 32 . writedata [31:0] $end
$var wire 32 / register_v0 [31:0] $end
$var wire 32 0 instr_addr [31:0] $end
$var wire 1 1 data_write $end
$var wire 1 2 data_read_en $end
$var wire 32 3 data_addr [31:0] $end
$var wire 1 ( active $end
$var reg 32 4 address [31:0] $end
$var reg 4 5 byteenable [3:0] $end
$var reg 1 6 clk_enable $end
$var reg 32 7 data_read [31:0] $end
$var reg 32 8 data_reg [31:0] $end
$var reg 32 9 instr_addr_reg [31:0] $end
$var reg 32 : instr_read [31:0] $end
$var reg 32 ; instr_reg [31:0] $end
$var reg 2 < next_state [1:0] $end
$var reg 1 % read $end
$var reg 2 = state [1:0] $end
$var reg 1 " write $end
$scope module harvard_cpu $end
$var wire 1 ) clk $end
$var wire 1 6 clk_enable $end
$var wire 32 > data_readdata [31:0] $end
$var wire 32 ? instr_readdata [31:0] $end
$var wire 1 + reset $end
$var wire 1 @ zero $end
$var wire 32 A register_v0 [31:0] $end
$var wire 32 B read_data_b [31:0] $end
$var wire 32 C read_data_a [31:0] $end
$var wire 1 D negative $end
$var wire 1 E equal $end
$var wire 32 F alu_result [31:0] $end
$var reg 1 ( active $end
$var reg 32 G alu_b [31:0] $end
$var reg 4 H alu_control [3:0] $end
$var reg 5 I alu_shift_amt [4:0] $end
$var reg 32 J data_address [31:0] $end
$var reg 1 2 data_read $end
$var reg 1 1 data_write $end
$var reg 32 K data_writedata [31:0] $end
$var reg 32 L hi_in [31:0] $end
$var reg 32 M hi_reg [31:0] $end
$var reg 32 N instr_address [31:0] $end
$var reg 32 O ir_reg [31:0] $end
$var reg 32 P lo_in [31:0] $end
$var reg 32 Q lo_reg [31:0] $end
$var reg 32 R pc_in [31:0] $end
$var reg 32 S pc_reg [31:0] $end
$var reg 64 T product [63:0] $end
$var reg 32 U quotient [31:0] $end
$var reg 32 V remainder [31:0] $end
$var reg 32 W sign_extended_immediate [31:0] $end
$var reg 5 X write_addr_c [4:0] $end
$var reg 32 Y write_data_c [31:0] $end
$var reg 1 Z write_enable_c $end
$scope module alu $end
$var wire 32 [ alu_b [31:0] $end
$var wire 4 \ alu_control [3:0] $end
$var wire 5 ] alu_shift_amt [4:0] $end
$var wire 32 ^ alu_a [31:0] $end
$var reg 32 _ alu_out [31:0] $end
$var reg 1 E equal $end
$var reg 1 D negative $end
$var reg 1 @ zero $end
$upscope $end
$scope module reg_file $end
$var wire 1 ) clk $end
$var wire 5 ` read_addr_a [4:0] $end
$var wire 5 a read_addr_b [4:0] $end
$var wire 1 + reset $end
$var wire 5 b write_addr_c [4:0] $end
$var wire 32 c write_data_c [31:0] $end
$var wire 1 Z write_enable_c $end
$var reg 32 d read_data_a [31:0] $end
$var reg 32 e read_data_b [31:0] $end
$var reg 32 f register_v0 [31:0] $end
$var integer 32 g i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ramInst $end
$var wire 32 h address [31:0] $end
$var wire 4 i byteenable [3:0] $end
$var wire 1 ) clk $end
$var wire 1 % read $end
$var wire 1 " write $end
$var wire 32 j writedata [31:0] $end
$var reg 13 k mapped_address [12:0] $end
$var reg 32 l readdata [31:0] $end
$scope begin $unm_blk_1 $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000000 m
bx l
bx k
bx j
b1111 i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
xZ
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
xE
xD
bx C
bx B
bx A
x@
bx ?
bx >
bx =
b11 <
bx ;
bx :
bx 9
bx 8
bx 7
16
b1111 5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
bx -
0,
0+
bx *
0)
x(
bx '
b1111 &
0%
bx $
bx #
0"
bx !
$end
#10
bx00 k
bx00 '
bx00 4
bx00 h
b0 H
b0 \
b0 !
b0 .
b0 K
b0 j
b0 T
bx00 3
bx00 J
0D
1@
b0 B
b0 e
b0 C
b0 ^
b0 d
b0 #
b0 /
b0 A
b0 f
b11 =
1+
1)
#20
0)
#30
b0 Y
b0 c
b0 3
b0 J
1E
b0 F
b0 _
b0 G
b0 [
1,
b1010000000000 k
06
b0 7
b0 >
b0 :
b0 ?
1%
b10111111110000000000000000000000 '
b10111111110000000000000000000000 4
b10111111110000000000000000000000 h
b10 <
b0 `
b0 a
b111 H
b111 \
b0 P
b0 L
b10111111110000000000000000000100 R
1Z
b0 X
b0 b
02
01
b0 T
b0 W
b0 I
b0 ]
b10111111110000000000000000000000 0
b10111111110000000000000000000000 N
0D
1@
b0 B
b0 e
b0 C
b0 ^
b0 d
0+
b0 9
b0 8
b0 ;
b0 Q
b0 M
b0 O
1(
b10111111110000000000000000000000 S
b100000 g
1)
#40
0)
#50
b100100000010000000000000001000 $
b100100000010000000000000001000 l
1)
#55
0,
b100100000010000000000000001000 *
b100100000010000000000000001000 -
#60
0)
#70
b0 k
16
b100100000010000000000000001000 :
b100100000010000000000000001000 ?
0%
b0 '
b0 4
b0 h
b11 <
b10 =
b10111111110000000000000000000000 9
1)
#80
0)
#90
b1000 Y
b1000 c
b1000 3
b1000 J
bx *
bx -
1,
b1010000000100 k
0E
b1000 F
b1000 _
06
1%
b10111111110000000000000000000100 '
b10111111110000000000000000000100 4
b10111111110000000000000000000100 h
b10 <
b1000 a
b10111111110000000000000000001000 R
b0 H
b0 \
b1000 X
b1000 b
b1000 G
b1000 [
b1000 W
b10111111110000000000000000000100 0
b10111111110000000000000000000100 N
b0 $
b0 l
b100100000010000000000000001000 O
b10111111110000000000000000000100 S
b11 =
b100100000010000000000000001000 ;
1)
#100
0)
#110
b1000 !
b1000 .
b1000 K
b1000 j
b0 V
b0 U
b1000 B
b1000 e
b1000000100100001 $
b1000000100100001 l
1)
#115
0,
b1000000100100001 *
b1000000100100001 -
#120
0)
#130
b1000 k
16
b1000000100100001 :
b1000000100100001 ?
0%
b1000 '
b1000 4
b1000 h
b11 <
b10 =
b10111111110000000000000000000100 9
1)
#140
0)
#150
b0 Y
b0 c
b0 3
b0 J
1E
b0 F
b0 _
b0 G
b0 [
bx V
bx U
bx *
bx -
1,
b1010000001000 k
b0 B
b0 e
06
1%
b10111111110000000000000000001000 '
b10111111110000000000000000001000 4
b10111111110000000000000000001000 h
b10 <
b0 a
b10111111110000000000000000001100 R
b10000 X
b10000 b
b0 !
b0 .
b0 K
b0 j
b11111111111111111000000100100001 W
b100 I
b100 ]
b10111111110000000000000000001000 0
b10111111110000000000000000001000 N
b11 =
b1000000100100001 ;
b1000000100100001 O
b10111111110000000000000000001000 S
b100100011000100000000000011110 $
b100100011000100000000000011110 l
1)
#160
0)
#170
b1000000000000000000001001 $
b1000000000000000000001001 l
1)
#175
0,
b1000000000000000000001001 *
b1000000000000000000001001 -
#180
0)
#190
b0 k
16
b1000000000000000000001001 :
b1000000000000000000001001 ?
0%
b0 '
b0 4
b0 h
b11 <
b10 =
b10111111110000000000000000001000 9
1)
#200
0)
#210
b1000 3
b1000 J
0E
0@
b1000 F
b1000 _
bx *
bx -
1,
b1010000001100 k
b1000 C
b1000 ^
b1000 d
06
1%
b10111111110000000000000000001100 '
b10111111110000000000000000001100 4
b10111111110000000000000000001100 h
b10 <
b1000 `
b1000 R
b10111111110000000000000000010000 Y
b10111111110000000000000000010000 c
b11111 X
b11111 b
b1001 W
b0 I
b0 ]
b10111111110000000000000000001100 0
b10111111110000000000000000001100 N
b0 $
b0 l
b1000000000000000000001001 O
b10111111110000000000000000001100 S
b11 =
b1000000000000000000001001 ;
1)
#220
0)
#230
1)
#235
0,
b0 *
b0 -
#240
0)
#250
b1000 k
16
b0 :
b0 ?
0%
b1000 '
b1000 4
b1000 h
b11 <
b10 =
b10111111110000000000000000001100 9
1)
#260
0)
#270
1E
1@
b0 3
b0 J
bx *
bx -
1,
b0 C
b0 ^
b0 d
b0 F
b0 _
06
1%
b10 <
b0 `
b111 H
b111 \
b1100 R
b0 Y
b0 c
b0 X
b0 b
b0 W
b1000 0
b1000 N
b11 =
b0 ;
b0 O
b1000 S
b100100011000100000000000011110 $
b100100011000100000000000011110 l
1)
#280
0)
#290
1)
#295
0,
b100100011000100000000000011110 *
b100100011000100000000000011110 -
#300
0)
#310
b0 k
16
b100100011000100000000000011110 :
b100100011000100000000000011110 ?
0%
b0 '
b0 4
b0 h
b11 <
b10 =
b1000 9
1)
#320
0)
#330
b11110 Y
b11110 c
b11100 3
b11100 J
bx *
bx -
1,
b1100 k
0E
b11110 F
b11110 _
06
1%
b1100 '
b1100 4
b1100 h
b10 <
b11 `
b10 a
b10000 R
b0 H
b0 \
b10 X
b10 b
b11110 G
b11110 [
b11110 W
b1100 0
b1100 N
b0 $
b0 l
b100100011000100000000000011110 O
b1100 S
b11 =
b100100011000100000000000011110 ;
1)
#340
0)
#350
b11110 !
b11110 .
b11110 K
b11110 j
b0 V
b0 U
b11110 B
b11110 e
b11110 #
b11110 /
b11110 A
b11110 f
b10000100001000000100000 $
b10000100001000000100000 l
1)
#355
0,
b10000100001000000100000 *
b10000100001000000100000 -
#360
0)
#370
b11100 k
16
b10000100001000000100000 :
b10000100001000000100000 ?
0%
b11100 '
b11100 4
b11100 h
b11 <
b10 =
b1100 9
1)
#380
0)
#390
b111100 Y
b111100 c
b1 U
b1110000100 T
b111100 3
b111100 J
bx *
bx -
1,
b10000 k
1E
0@
b111100 F
b111100 _
b11110 C
b11110 ^
b11110 d
06
1%
b10000 '
b10000 4
b10000 h
b10 <
b10 `
b10100 R
b0 !
b0 .
b0 K
b0 j
b1000000100000 W
b10000 0
b10000 N
b11 =
b10000100001000000100000 ;
b10000100001000000100000 O
b10000 S
b0 $
b0 l
1)
#400
0)
#410
b1111000 Y
b1111000 c
b111100 G
b111100 [
b111000010000 T
b1111000 3
b1111000 J
1E
b1111000 F
b1111000 _
b111100 B
b111100 e
b111100 C
b111100 ^
b111100 d
b111100 #
b111100 /
b111100 A
b111100 f
b1000 $
b1000 l
1)
#415
0,
b1000 *
b1000 -
#420
0)
#430
b11110000 k
b11110000 Y
b11110000 c
b1111000 G
b1111000 [
b11100001000000 T
b11110000 3
b11110000 J
16
b1000 :
b1000 ?
0%
b11110000 '
b11110000 4
b11110000 h
b11 <
1E
b11110000 F
b11110000 _
b1111000 B
b1111000 e
b1111000 C
b1111000 ^
b1111000 d
b1111000 #
b1111000 /
b1111000 A
b1111000 f
b10 =
b10000 9
1)
#440
0)
#450
bx *
bx -
1,
b10100 k
b0 Y
b0 c
b0 G
b0 [
bx V
bx U
b0 T
b0 3
b0 J
06
1%
b10100 '
b10100 4
b10100 h
b10 <
1E
1@
b0 F
b0 _
b0 B
b0 e
b0 C
b0 ^
b0 d
b11110000 #
b11110000 /
b11110000 A
b11110000 f
b0 `
b0 a
b0 R
0Z
b0 X
b0 b
b1000 W
b10100 0
b10100 N
b0 $
b0 l
b1000 O
b10100 S
b11 =
b1000 ;
1)
#460
0)
#470
1)
#475
0,
b0 *
b0 -
#480
0)
#490
b0 k
16
b0 :
b0 ?
0%
b0 '
b0 4
b0 h
b11 <
b10 =
b10100 9
1)
#500
0)
#510
bx *
bx -
1,
06
1%
b10 <
b111 H
b111 \
b100 R
1Z
b0 W
b0 0
b0 N
b11 =
b0 ;
b0 O
b0 S
1)
#520
0)
#530
1)
#535
0,
b0 *
b0 -
#540
0)
#550
16
0%
b11 <
b10 =
b0 9
1)
#560
0)
#570
bx *
bx -
1,
b100 k
06
1%
b100 '
b100 4
b100 h
b10 <
b1000 R
b100 0
b100 N
0(
b100 S
b11 =
1)
#580
0)
#590
1)
