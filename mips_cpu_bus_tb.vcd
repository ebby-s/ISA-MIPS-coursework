$date
	Mon Dec 21 09:19:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mips_cpu_bus_tb $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 32 # register_v0 [31:0] $end
$var wire 32 $ readdata [31:0] $end
$var wire 1 % read $end
$var wire 4 & byteenable [3:0] $end
$var wire 32 ' address [31:0] $end
$var wire 1 ( active $end
$var reg 1 ) clk $end
$var reg 1 * reset $end
$var reg 1 + waitrequest $end
$var reg 2 , waitrequest_counter [1:0] $end
$scope module cpuInst $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 + waitrequest $end
$var wire 32 - writedata [31:0] $end
$var wire 32 . register_v0 [31:0] $end
$var wire 32 / readdata [31:0] $end
$var wire 32 0 instr_addr [31:0] $end
$var wire 1 1 data_write $end
$var wire 1 2 data_read_en $end
$var wire 32 3 data_addr [31:0] $end
$var wire 4 4 byteenable [3:0] $end
$var wire 1 ( active $end
$var reg 32 5 address [31:0] $end
$var reg 1 6 clk_enable $end
$var reg 32 7 data_read [31:0] $end
$var reg 32 8 data_reg [31:0] $end
$var reg 1 9 delayed $end
$var reg 32 : instr_addr_reg [31:0] $end
$var reg 32 ; instr_read [31:0] $end
$var reg 32 < instr_reg [31:0] $end
$var reg 2 = next_state [1:0] $end
$var reg 1 % read $end
$var reg 2 > state [1:0] $end
$var reg 1 " write $end
$scope module harvard_cpu $end
$var wire 1 ) clk $end
$var wire 1 6 clk_enable $end
$var wire 32 ? data_readdata [31:0] $end
$var wire 32 @ instr_readdata [31:0] $end
$var wire 1 * reset $end
$var wire 1 A zero $end
$var wire 32 B register_v0 [31:0] $end
$var wire 32 C read_data_b [31:0] $end
$var wire 32 D read_data_a [31:0] $end
$var wire 1 E negative $end
$var wire 1 F equal $end
$var wire 32 G alu_result [31:0] $end
$var reg 1 ( active $end
$var reg 32 H alu_b [31:0] $end
$var reg 4 I alu_control [3:0] $end
$var reg 5 J alu_shift_amt [4:0] $end
$var reg 32 K data_address [31:0] $end
$var reg 4 L data_byteenable [3:0] $end
$var reg 1 2 data_read $end
$var reg 1 1 data_write $end
$var reg 32 M data_writedata [31:0] $end
$var reg 32 N hi_in [31:0] $end
$var reg 32 O hi_reg [31:0] $end
$var reg 32 P instr_address [31:0] $end
$var reg 32 Q ir_reg [31:0] $end
$var reg 32 R lo_in [31:0] $end
$var reg 32 S lo_reg [31:0] $end
$var reg 32 T pc_in [31:0] $end
$var reg 32 U pc_reg [31:0] $end
$var reg 64 V product [63:0] $end
$var reg 5 W regfile_write_addr [4:0] $end
$var reg 32 X regfile_write_data [31:0] $end
$var reg 1 Y regfile_write_enable $end
$var reg 32 Z sign_extended_immediate [31:0] $end
$var reg 64 [ u_product [63:0] $end
$scope module alu $end
$var wire 32 \ alu_b [31:0] $end
$var wire 4 ] alu_control [3:0] $end
$var wire 5 ^ alu_shift_amt [4:0] $end
$var wire 32 _ alu_a [31:0] $end
$var reg 32 ` alu_out [31:0] $end
$var reg 1 F equal $end
$var reg 1 E negative $end
$var reg 1 A zero $end
$upscope $end
$scope module reg_file $end
$var wire 1 ) clk $end
$var wire 1 6 clk_enable $end
$var wire 5 a read_addr_a [4:0] $end
$var wire 5 b read_addr_b [4:0] $end
$var wire 5 c regfile_write_addr [4:0] $end
$var wire 32 d regfile_write_data [31:0] $end
$var wire 1 Y regfile_write_enable $end
$var wire 1 * reset $end
$var reg 32 e read_data_a [31:0] $end
$var reg 32 f read_data_b [31:0] $end
$var reg 32 g register_v0 [31:0] $end
$var integer 32 h i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ramInst $end
$var wire 32 i address [31:0] $end
$var wire 4 j byteenable [3:0] $end
$var wire 1 ) clk $end
$var wire 1 % read $end
$var wire 1 + waitrequest $end
$var wire 1 " write $end
$var wire 32 k writedata [31:0] $end
$var reg 13 l mapped_address [12:0] $end
$var reg 32 m readdata [31:0] $end
$var reg 1 n supress_read $end
$scope begin $unm_blk_1 $end
$var integer 32 o i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000000 o
0n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
xY
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
xF
xE
bx D
bx C
bx B
xA
bx @
bx ?
bx >
b11 =
bx <
bx ;
bx :
x9
bx 8
bx 7
16
bx 5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
bx -
b0 ,
0+
0*
0)
x(
bx '
bx &
0%
bx $
bx #
0"
bx !
$end
#10
bx00 l
bx00 '
bx00 5
bx00 i
b0 !
b0 -
b0 M
b0 k
b1111 &
b1111 4
b1111 L
b1111 j
b0 I
b0 ]
b0 [
b0 V
bx00 3
bx00 K
0E
1A
b0 C
b0 f
b0 D
b0 _
b0 e
b0 #
b0 .
b0 B
b0 g
b11 >
1*
1)
#20
0)
#30
b0 X
b0 d
b0 3
b0 K
1F
b0 G
b0 `
b0 H
b0 \
b1010000000000 l
b1 ,
b0 7
b0 ?
b0 ;
b0 @
1%
b10111111110000000000000000000000 '
b10111111110000000000000000000000 5
b10111111110000000000000000000000 i
06
b10 =
b0 a
b0 b
b111 I
b111 ]
b0 R
b0 N
b10111111110000000000000000000100 T
1Y
b0 W
b0 c
b0 &
b0 4
b0 L
b0 j
02
01
b0 [
b0 V
b0 J
b0 ^
b0 Z
b10111111110000000000000000000000 0
b10111111110000000000000000000000 P
0E
1A
b0 C
b0 f
b0 D
b0 _
b0 e
0*
b0 :
b0 8
b0 <
09
1(
b0 S
b0 O
b0 Q
b10111111110000000000000000000000 U
b100000 h
1)
#40
0)
#50
b0 l
b100110000100000000000000001000 ;
b100110000100000000000000001000 @
0%
b0 '
b0 5
b0 i
16
b11 =
b100110000100000000000000001000 $
b100110000100000000000000001000 /
b100110000100000000000000001000 m
b10111111110000000000000000000000 :
b10 >
1)
#60
0)
#70
b1000 X
b1000 d
b1000 3
b1000 K
b1010000000100 l
b10 ,
0F
b1000 G
b1000 `
1%
b10111111110000000000000000000100 '
b10111111110000000000000000000100 5
b10111111110000000000000000000100 i
06
b10 =
b10000 a
b10000 b
b10111111110000000000000000001000 T
b1111 &
b1111 4
b1111 L
b1111 j
b0 I
b0 ]
b10000 W
b10000 c
b1000 H
b1000 \
b1000 Z
b10111111110000000000000000000100 0
b10111111110000000000000000000100 P
b100110000100000000000000001000 <
b11 >
b100110000100000000000000001000 Q
b10111111110000000000000000000100 U
1)
#80
0)
#90
b1000 l
b100100010000100010011100010001 ;
b100100010000100010011100010001 @
0%
b1000 '
b1000 5
b1000 i
16
b11 =
b100100010000100010011100010001 $
b100100010000100010011100010001 /
b100100010000100010011100010001 m
b10111111110000000000000000000100 :
b10 >
1)
#100
0)
#110
b1010000001000 l
b11 ,
1%
b10111111110000000000000000001000 '
b10111111110000000000000000001000 5
b10111111110000000000000000001000 i
06
b10 =
b10 a
b10 b
b10111111110000000000000000001100 T
b10011100010001 X
b10011100010001 d
b0 !
b0 -
b0 M
b0 k
b10 W
b10 c
b10011100010001 H
b10011100010001 \
b0 [
b0 V
b11100 J
b11100 ^
b10011100010001 Z
b10011100010000 3
b10011100010000 K
b10111111110000000000000000001000 0
b10111111110000000000000000001000 P
0F
1A
b10011100010001 G
b10011100010001 `
b0 C
b0 f
b0 D
b0 _
b0 e
b100100010000100010011100010001 <
b11 >
b100100010000100010011100010001 Q
b10111111110000000000000000001000 U
1)
#120
0)
#130
b11100010000 l
b100001001000000000 ;
b100001001000000000 @
0%
b10011100010000 '
b10011100010000 5
b10011100010000 i
16
b11 =
b100001001000000000 $
b100001001000000000 /
b100001001000000000 m
b10111111110000000000000000001000 :
b10 >
1)
#140
0)
#150
b1010000001100 l
b0 ,
1%
b10111111110000000000000000001100 '
b10111111110000000000000000001100 5
b10111111110000000000000000001100 i
06
b10 =
b0 a
b111 I
b111 ]
b10111111110000000000000000010000 T
b1001110001000100000000 X
b1001110001000100000000 d
b0 &
b0 4
b0 L
b0 j
b0 [
b0 V
b1000 J
b1000 ^
b1001000000000 Z
b1001110001000100000000 3
b1001110001000100000000 K
b10111111110000000000000000001100 0
b10111111110000000000000000001100 P
0F
1A
b1001110001000100000000 G
b1001110001000100000000 `
b10011100010001 C
b10011100010001 f
b0 D
b0 _
b0 e
b10011100010001 #
b10011100010001 .
b10011100010001 B
b10011100010001 g
b100001001000000000 <
b11 >
b100001001000000000 Q
b10111111110000000000000000001100 U
1)
#160
0)
#170
b1000100000000 l
b10100110000000101111111111111011 ;
b10100110000000101111111111111011 @
0%
b1001110001000100000000 '
b1001110001000100000000 5
b1001110001000100000000 i
16
b11 =
b10100110000000101111111111111011 $
b10100110000000101111111111111011 /
b10100110000000101111111111111011 m
b10111111110000000000000000001100 :
b10 >
1)
#180
0)
#190
0A
b11 X
b11 d
b1001110001000100000000000 [
b1001110001000100000000000 V
b0 3
b0 K
b1010000010000 l
b1 ,
b1000 D
b1000 _
b1000 e
b11 G
b11 `
1%
b10111111110000000000000000010000 '
b10111111110000000000000000010000 5
b10111111110000000000000000010000 i
06
b10 =
b10000 a
b10111111110000000000000000010100 T
b10001000000000000000000000000 !
b10001000000000000000000000000 -
b10001000000000000000000000000 M
b10001000000000000000000000000 k
b1100 &
b1100 4
b1100 L
b1100 j
b0 I
b0 ]
0Y
b11111111111111111111111111111011 H
b11111111111111111111111111111011 \
11
b11111 J
b11111 ^
b11111111111111111111111111111011 Z
b10111111110000000000000000010000 0
b10111111110000000000000000010000 P
b1001110001000100000000 C
b1001110001000100000000 f
b1001110001000100000000 #
b1001110001000100000000 .
b1001110001000100000000 B
b1001110001000100000000 g
b10100110000000101111111111111011 <
b11 >
b10100110000000101111111111111011 Q
b10111111110000000000000000010000 U
1)
#200
0)
#210
b0 l
1+
b10100110000000101111111111111011 ;
b10100110000000101111111111111011 @
0%
1"
b0 '
b0 5
b0 i
06
b1 =
b10000110000000101111111111111011 $
b10000110000000101111111111111011 /
b10000110000000101111111111111011 m
b10111111110000000000000000010000 :
b10 >
1)
#220
0)
#230
19
1)
#240
0)
#245
16
0+
#250
b1010000010100 l
b10 ,
b10000110000000101111111111111011 ;
b10000110000000101111111111111011 @
1%
b10111111110000000000000000010100 '
b10111111110000000000000000010100 5
b10111111110000000000000000010100 i
06
b10111111110000000000000000011000 T
b10111111110000000000000000010100 0
b10111111110000000000000000010100 P
0"
b10 =
b10111111110000000000000000010100 U
b1 >
1)
#260
0)
#270
b0 l
1+
0%
1"
b0 '
b0 5
b0 i
06
b1 =
b10000110000000101111111111111011 <
b10111111110000000000000000010100 :
b10 >
b1111100000001000 $
b1111100000001000 /
b1111100000001000 m
1)
#280
0)
#290
1)
#300
0)
#305
16
0+
#310
b1010000011000 l
b11 ,
b1111100000001000 ;
b1111100000001000 @
1%
0"
b10111111110000000000000000011000 '
b10111111110000000000000000011000 5
b10111111110000000000000000011000 i
06
b10 =
b10111111110000000000000000011100 T
b0 X
b0 d
b1001110001000100000000 !
b1001110001000100000000 -
b1001110001000100000000 M
b1001110001000100000000 k
b1111 &
b1111 4
b1111 L
b1111 j
1Y
12
01
b10111111110000000000000000011000 0
b10111111110000000000000000011000 P
b1 >
b10000110000000101111111111111011 Q
b10111111110000000000000000011000 U
1)
#320
0)
#330
b0 l
b0 ,
b0 '
b0 5
b0 i
b0 =
b0 $
b0 /
b0 m
b1111100000001000 <
b10111111110000000000000000011000 :
b10 >
1)
#340
0)
#350
0%
16
b11 =
b0 >
b10001000000000000000000000000 $
b10001000000000000000000000000 /
b10001000000000000000000000000 m
1)
#360
0)
#370
1F
b1010000011100 l
b0 [
b0 V
b0 3
b0 K
b10001000000000000000000000000 ;
b10001000000000000000000000000 @
b10111111110000000000000000011100 '
b10111111110000000000000000011100 5
b10111111110000000000000000011100 i
b10 ,
1A
b0 G
b0 `
b0 C
b0 f
b0 D
b0 _
b0 e
b0 #
b0 .
b0 B
b0 g
b0 a
b0 b
b0 T
0Y
b0 X
b0 d
b11111 W
b11111 c
b0 H
b0 \
b0 !
b0 -
b0 M
b0 k
b0 &
b0 4
b0 L
b0 j
02
b0 J
b0 ^
b11111111111111111111100000001000 Z
b10111111110000000000000000011100 0
b10111111110000000000000000011100 P
b0 7
b0 ?
1%
06
b10 =
b1111100000001000 Q
b10111111110000000000000000011100 U
b11 >
1)
#380
0)
#390
b0 l
0%
b0 '
b0 5
b0 i
16
b11 =
b10001000000000000000000000000 <
b10111111110000000000000000011100 :
b10 >
b0 $
b0 /
b0 m
1)
#400
0)
#410
b11 ,
b0 ;
b0 @
1%
06
b10 =
b1000 a
b1111 &
b1111 4
b1111 L
b1111 j
b0 W
b0 c
b0 Z
b0 0
b0 P
b10001000000000000000000000000 Q
b0 U
b11 >
1)
#420
0)
#430
0%
16
b11 =
b0 <
b0 :
b10 >
b10001000000000000000000000000 $
b10001000000000000000000000000 /
b10001000000000000000000000000 m
1)
#440
0)
#450
b111 I
b111 ]
b100 T
b0 &
b0 4
b0 L
b0 j
b0 a
0(
b0 Q
b11 >
1)
#460
0)
#470
1)
