$date
	Thu Dec 10 17:14:49 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mips_cpu_bus_tb $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 32 # register_v0 [31:0] $end
$var wire 32 $ readdata [31:0] $end
$var wire 1 % read $end
$var wire 4 & byteenable [3:0] $end
$var wire 32 ' address [31:0] $end
$var wire 1 ( active $end
$var reg 1 ) clk $end
$var reg 32 * delayed_readdata [31:0] $end
$var reg 1 + reset $end
$var reg 1 , waitrequest $end
$scope module cpuInst $end
$var wire 1 ) clk $end
$var wire 32 - readdata [31:0] $end
$var wire 1 + reset $end
$var wire 1 , waitrequest $end
$var wire 32 . writedata [31:0] $end
$var wire 32 / register_v0 [31:0] $end
$var wire 32 0 instr_addr [31:0] $end
$var wire 1 1 data_write $end
$var wire 1 2 data_read_en $end
$var wire 32 3 data_addr [31:0] $end
$var wire 4 4 byteenable [3:0] $end
$var wire 1 ( active $end
$var reg 32 5 address [31:0] $end
$var reg 1 6 clk_enable $end
$var reg 32 7 data_read [31:0] $end
$var reg 32 8 data_reg [31:0] $end
$var reg 32 9 instr_addr_reg [31:0] $end
$var reg 32 : instr_read [31:0] $end
$var reg 32 ; instr_reg [31:0] $end
$var reg 2 < next_state [1:0] $end
$var reg 1 % read $end
$var reg 2 = state [1:0] $end
$var reg 1 " write $end
$scope module harvard_cpu $end
$var wire 1 ) clk $end
$var wire 1 6 clk_enable $end
$var wire 32 > data_readdata [31:0] $end
$var wire 32 ? instr_readdata [31:0] $end
$var wire 1 + reset $end
$var wire 1 @ zero $end
$var wire 32 A register_v0 [31:0] $end
$var wire 32 B read_data_b [31:0] $end
$var wire 32 C read_data_a [31:0] $end
$var wire 1 D negative $end
$var wire 1 E equal $end
$var wire 32 F alu_result [31:0] $end
$var reg 1 ( active $end
$var reg 32 G alu_b [31:0] $end
$var reg 4 H alu_control [3:0] $end
$var reg 5 I alu_shift_amt [4:0] $end
$var reg 32 J data_address [31:0] $end
$var reg 4 K data_byteenable [3:0] $end
$var reg 1 2 data_read $end
$var reg 1 1 data_write $end
$var reg 32 L data_writedata [31:0] $end
$var reg 32 M hi_in [31:0] $end
$var reg 32 N hi_reg [31:0] $end
$var reg 32 O instr_address [31:0] $end
$var reg 32 P ir_reg [31:0] $end
$var reg 32 Q lo_in [31:0] $end
$var reg 32 R lo_reg [31:0] $end
$var reg 32 S pc_in [31:0] $end
$var reg 32 T pc_reg [31:0] $end
$var reg 64 U product [63:0] $end
$var reg 32 V quotient [31:0] $end
$var reg 5 W regfile_write_addr [4:0] $end
$var reg 32 X regfile_write_data [31:0] $end
$var reg 1 Y regfile_write_enable $end
$var reg 32 Z remainder [31:0] $end
$scope module alu $end
$var wire 32 [ alu_b [31:0] $end
$var wire 4 \ alu_control [3:0] $end
$var wire 5 ] alu_shift_amt [4:0] $end
$var wire 32 ^ alu_a [31:0] $end
$var reg 32 _ alu_out [31:0] $end
$var reg 1 E equal $end
$var reg 1 D negative $end
$var reg 1 @ zero $end
$upscope $end
$scope module reg_file $end
$var wire 1 ) clk $end
$var wire 1 6 clk_enable $end
$var wire 5 ` read_addr_a [4:0] $end
$var wire 5 a read_addr_b [4:0] $end
$var wire 5 b regfile_write_addr [4:0] $end
$var wire 32 c regfile_write_data [31:0] $end
$var wire 1 Y regfile_write_enable $end
$var wire 1 + reset $end
$var reg 32 d read_data_a [31:0] $end
$var reg 32 e read_data_b [31:0] $end
$var reg 32 f register_v0 [31:0] $end
$var integer 32 g i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ramInst $end
$var wire 32 h address [31:0] $end
$var wire 4 i byteenable [3:0] $end
$var wire 1 ) clk $end
$var wire 1 % read $end
$var wire 1 , waitrequest $end
$var wire 1 " write $end
$var wire 32 j writedata [31:0] $end
$var reg 13 k mapped_address [12:0] $end
$var reg 32 l readdata [31:0] $end
$scope begin $unm_blk_1 $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000000 m
bx l
bx00 k
bx j
b1111 i
bx00 h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
b0 \
bx [
bx Z
xY
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
b1111 K
bx00 J
bx I
b0 H
bx G
bx F
xE
xD
bx C
bx B
bx A
x@
bx ?
bx >
bx =
b11 <
bx ;
bx :
bx 9
bx 8
bx 7
16
bx00 5
b1111 4
bx00 3
x2
x1
bx 0
bx /
bx .
bx -
0,
0+
bx *
0)
x(
bx00 '
b1111 &
0%
bx $
bx #
0"
bx !
$end
#10
b0 !
b0 .
b0 L
b0 j
b0 U
0D
1@
b0 B
b0 e
b0 C
b0 ^
b0 d
b0 #
b0 /
b0 A
b0 f
1(
b11 =
1+
1)
#20
0)
#30
b0 X
b0 c
b0 3
b0 J
1E
b0 F
b0 _
b0 G
b0 [
1,
b1010000000000 k
06
b0 7
b0 >
b0 :
b0 ?
1%
b10111111110000000000000000000000 '
b10111111110000000000000000000000 5
b10111111110000000000000000000000 h
b10 <
b0 `
b0 a
b111 H
b111 \
b0 Q
b0 M
b10111111110000000000000000000100 S
1Y
b0 W
b0 b
b0 &
b0 4
b0 K
b0 i
02
01
b0 U
b0 I
b0 ]
b10111111110000000000000000000000 0
b10111111110000000000000000000000 O
0D
1@
b0 B
b0 e
b0 C
b0 ^
b0 d
0+
b0 9
b0 8
b0 ;
b0 R
b0 N
b0 P
b10111111110000000000000000000000 T
b100000 g
1)
#40
0)
#50
1)
#55
b100100111000110000000000001010 $
b100100111000110000000000001010 l
0,
#60
0)
#70
b0 k
16
bx :
bx ?
0%
b0 '
b0 5
b0 h
b11 <
b10 =
b10111111110000000000000000000000 9
1)
#80
0)
#90
xD
x@
bx X
bx c
bx !
bx .
bx L
bx j
bx U
bx00 3
bx00 J
1,
b1010000000100 k
bx B
bx e
bx C
bx ^
bx d
xE
bx F
bx _
06
1%
b10111111110000000000000000000100 '
b10111111110000000000000000000100 5
b10111111110000000000000000000100 h
b10 <
bx `
bx a
b10111111110000000000000000001000 S
b1111 &
b1111 4
b1111 K
b1111 i
b0 H
b0 \
xY
bx W
bx b
bx G
bx [
x2
x1
bx I
bx ]
b10111111110000000000000000000100 0
b10111111110000000000000000000100 O
bx P
b10111111110000000000000000000100 T
b11 =
bx ;
1)
#100
0)
#110
1)
#115
b100100110001010000000000000101 $
b100100110001010000000000000101 l
0,
b100100111000110000000000001010 *
b100100111000110000000000001010 -
#120
0)
#130
bx00 k
16
b100100111000110000000000001010 :
b100100111000110000000000001010 ?
0%
bx00 '
bx00 5
bx00 h
b11 <
b10 =
b10111111110000000000000000000100 9
1)
#140
0)
#150
b1010 X
b1010 c
b0 !
b0 .
b0 L
b0 j
b0 U
b1000 3
b1000 J
0D
0E
1@
b1010 F
b1010 _
bx *
bx -
1,
b1010000001000 k
b0 B
b0 e
b0 C
b0 ^
b0 d
06
1%
b10111111110000000000000000001000 '
b10111111110000000000000000001000 5
b10111111110000000000000000001000 h
b10 <
b111 `
b11 a
b10111111110000000000000000001100 S
1Y
b11 W
b11 b
b1010 G
b1010 [
02
01
b0 I
b0 ]
b10111111110000000000000000001000 0
b10111111110000000000000000001000 O
b11 =
b100100111000110000000000001010 ;
b100100111000110000000000001010 P
b10111111110000000000000000001000 T
1)
#160
0)
#170
1)
#175
b11001010001000000100011 $
b11001010001000000100011 l
0,
b100100110001010000000000000101 *
b100100110001010000000000000101 -
#180
0)
#190
b1000 k
16
b100100110001010000000000000101 :
b100100110001010000000000000101 ?
0%
b1000 '
b1000 5
b1000 h
b11 <
b10 =
b10111111110000000000000000001000 9
1)
#200
0)
#210
bx *
bx -
1,
b1010000001100 k
b101 X
b101 c
b100 3
b100 J
06
1%
b10111111110000000000000000001100 '
b10111111110000000000000000001100 5
b10111111110000000000000000001100 h
b10 <
b101 F
b101 _
b110 `
b101 a
b10111111110000000000000000010000 S
b101 W
b101 b
b101 G
b101 [
b10111111110000000000000000001100 0
b10111111110000000000000000001100 O
b100100110001010000000000000101 P
b10111111110000000000000000001100 T
b11 =
b100100110001010000000000000101 ;
1)
#220
0)
#230
1)
#235
b1000 $
b1000 l
0,
b11001010001000000100011 *
b11001010001000000100011 -
#240
0)
#250
b100 k
16
b11001010001000000100011 :
b11001010001000000100011 ?
0%
b100 '
b100 5
b100 h
b11 <
b10 =
b10111111110000000000000000001100 9
1)
#260
0)
#270
0@
b101 X
b101 c
b110010 U
b100 3
b100 J
bx *
bx -
1,
b1010000010000 k
b1010 C
b1010 ^
b1010 d
b101 F
b101 _
06
1%
b10111111110000000000000000010000 '
b10111111110000000000000000010000 5
b10111111110000000000000000010000 h
b10 <
b11 `
b1 H
b1 \
b10111111110000000000000000010100 S
b10 W
b10 b
b0 &
b0 4
b0 K
b0 i
b0 Z
b10 V
b10111111110000000000000000010000 0
b10111111110000000000000000010000 O
b101 B
b101 e
b11 =
b11001010001000000100011 ;
b11001010001000000100011 P
b10111111110000000000000000010000 T
1)
#280
0)
#290
1)
#295
b0 $
b0 l
0,
b1000 *
b1000 -
#300
0)
#310
b100 k
16
b1000 :
b1000 ?
0%
b100 '
b100 5
b100 h
b11 <
b10 =
b10111111110000000000000000010000 9
1)
#320
0)
#330
b0 X
b0 c
b0 3
b0 J
1E
b0 F
b0 _
bx *
bx -
1,
b1010000010100 k
b0 G
b0 [
bx Z
bx V
b0 U
06
1%
b10111111110000000000000000010100 '
b10111111110000000000000000010100 5
b10111111110000000000000000010100 h
b10 <
1@
b0 B
b0 e
b0 C
b0 ^
b0 d
b101 #
b101 /
b101 A
b101 f
b0 `
b0 a
b0 H
b0 \
b0 S
0Y
b0 W
b0 b
b10111111110000000000000000010100 0
b10111111110000000000000000010100 O
b1000 P
b10111111110000000000000000010100 T
b11 =
b1000 ;
1)
#340
0)
#350
1)
#355
0,
b0 *
b0 -
#360
0)
#370
b0 k
16
b0 :
b0 ?
0%
b0 '
b0 5
b0 h
b11 <
b10 =
b10111111110000000000000000010100 9
1)
#380
0)
#390
bx *
bx -
1,
06
1%
b10 <
b111 H
b111 \
b100 S
b0 0
b0 O
0(
b11 =
b0 ;
b0 P
b0 T
1)
#400
0)
#410
1)
